(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{482:function(s,t,e){"use strict";e.r(t);var a=e(23),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),e("p",[s._v("正则表达式是用于匹配字符串中字符组合的模式。在 JavaScript 中，正则表达式也是对象。这些模式被用于 "),e("code",[s._v("RegExp")]),s._v(" 的 "),e("code",[s._v("exec")]),s._v(" 和 "),e("code",[s._v("test")]),s._v(" 方法, 以及 "),e("code",[s._v("String")]),s._v(" 的 "),e("code",[s._v("match、matchAll、replace、search")]),s._v(" 和 "),e("code",[s._v("split")]),s._v(" 方法。")]),s._v(" "),e("h2",{attrs:{id:"创建正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建正则表达式"}},[s._v("#")]),s._v(" 创建正则表达式")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var reg = /pattern/flags")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" re1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("ab+c")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gi")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var reg = new RegExp(pattern,flags)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" re2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ab+c'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("flags，用来标明正则表达式的行为，可选值有以下")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("g")]),s._v(": 表示全局匹配（global match），查找所有匹配的字符串，而不是在发现第一个匹配项时就停止")]),s._v(" "),e("li",[e("code",[s._v("i")]),s._v(": 表示不区分字符串大小写（ignore case），即在确定匹配项时忽略模式与字符串的大小写")]),s._v(" "),e("li",[e("code",[s._v("m")]),s._v(": 表示多行模式（multiline），Treat beginning and end characters ("),e("code",[s._v("^")]),s._v(" and "),e("code",[s._v("$")]),s._v(") as working over multiple lines. In other words, match the beginning or end of each line (delimited by "),e("code",[s._v("\\n")]),s._v(" or "),e("code",[s._v("\\r")]),s._v("), not only the very beginning or end of the whole input string.")]),s._v(" "),e("li",[e("code",[s._v("s")]),s._v(": (dotAll) 允许"),e("code",[s._v(".")]),s._v(" 匹配换行符")]),s._v(" "),e("li",[e("code",[s._v("u")]),s._v(": (unicode) Treat "),e("code",[s._v("pattern")]),s._v(" as a sequence of Unicode code points")]),s._v(" "),e("li",[e("code",[s._v("y")]),s._v(": (sticky) Matches only from the index indicated by the lastIndex property of this regular expression in the target string. Does not attempt to match from any later indexes.")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 测试 flag: m")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("^a.*e$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("s")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" regM "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("^a.*e$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("ms")])]),s._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abcd\\ne'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abce\\nf'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abce\\nf'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"编写一个正则表达式的模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编写一个正则表达式的模式"}},[s._v("#")]),s._v(" 编写一个正则表达式的模式")]),s._v(" "),e("h3",{attrs:{id:"断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#断言"}},[s._v("#")]),s._v(" 断言")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("x(?=y)")]),s._v(": 先行断言(Lookahead assertion)。y 紧跟 x 的情况下匹配 x")]),s._v(" "),e("li",[e("code",[s._v("x(?!y)")]),s._v(": 负向先行断言(Negative lookahead assertion)。x 后无 y 紧随的情况下匹配 x")]),s._v(" "),e("li",[e("code",[s._v("(?<=y)x")]),s._v(": 后行断言(Lookbehind assertion)。x 紧随 y 的情况下匹配 x")]),s._v(" "),e("li",[e("code",[s._v("(?<!y)x")]),s._v(": 负向后行断言(Negative lookbehind assertion)。x 不紧随 y 的情况下匹配 x")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Java'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'JavaCva'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先行断言")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" laReg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("Ja(?=vaCva)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\nlaReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nlaReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 负向先行断言")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" nlaReg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("Java(?!Cva)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\nnlaReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nnlaReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后行断言")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" lbReg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(?<=Java)Cva")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\nlbReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nlbReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" nlbReg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(?<!Ja)va")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\nnlbReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nnlbReg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("blockquote",[e("p",[s._v("组和范围：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges")])]),s._v(" "),e("h3",{attrs:{id:"边界"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边界"}},[s._v("#")]),s._v(" 边界")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("^")]),s._v(": 匹配输入的开头。如果多行模式设为 true，那么也匹配换行符后紧跟的位置")]),s._v(" "),e("li",[e("code",[s._v("$")]),s._v(": 匹配输入的结束。如果多行模式设为 true，那么也匹配换行符前的位置")]),s._v(" "),e("li",[e("code",[s._v("\\b")]),s._v(": 匹配单词边界。这个位置 往前都没有单词 或者 往后都没有单词\n"),e("ul",[e("li",[e("code",[s._v("/\\bm/")]),s._v(' matches the "m" in "moon"')]),s._v(" "),e("li",[e("code",[s._v("/oo\\b/")]),s._v(' does not match the "oo" in "moon"')]),s._v(" "),e("li",[e("code",[s._v("/\\w\\b\\w/")]),s._v(" will never match anything, because a word character can never be followed by both a non-word and a word character")])])]),s._v(" "),e("li",[e("code",[s._v("\\B")]),s._v(": 匹配非单词边界。")])]),s._v(" "),e("h3",{attrs:{id:"字符类别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符类别"}},[s._v("#")]),s._v(" 字符类别")]),s._v(" "),e("ul",[e("li",[e("code",[s._v(".")]),s._v(": 匹配除了 "),e("strong",[s._v("行终止符")]),s._v("（"),e("code",[s._v("\\n")]),s._v(", "),e("code",[s._v("\\r")]),s._v(", "),e("code",[s._v("\\u2028")]),s._v(", "),e("code",[s._v("\\u2029")]),s._v("）的 所有"),e("strong",[s._v("单字符")]),s._v(" "),e("blockquote",[e("p",[s._v("ES2018 后，可以在添加 s 标识符，让 "),e("code",[s._v(".")]),s._v("也能匹配到"),e("strong",[s._v("行终止符")])])])]),s._v(" "),e("li",[e("code",[s._v("\\d")]),s._v(": 匹配阿拉伯数字，等价于 "),e("code",[s._v("[0-9]")])]),s._v(" "),e("li",[e("code",[s._v("\\D")]),s._v(": 匹配 非阿拉伯数字，等价于 "),e("code",[s._v("[^0-9]")])]),s._v(" "),e("li",[e("code",[s._v("\\w")]),s._v(": 等价于 "),e("code",[s._v("[A-Za-z0-9_]")])]),s._v(" "),e("li",[e("code",[s._v("\\W")]),s._v(": 等价于 "),e("code",[s._v("[^A-Za-z0-9_]")])]),s._v(" "),e("li",[e("code",[s._v("\\s")]),s._v(": 匹配单个空白字符，包括 空格, tab, 换页符("),e("code",[s._v("\\f")]),s._v("), 换行符("),e("code",[s._v("\\n")]),s._v(")，其他 Unicode 空白符。等价于 "),e("code",[s._v("[ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]")])]),s._v(" "),e("li",[e("code",[s._v("\\S")]),s._v(": 匹配单个 非空白符。等价于 "),e("code",[s._v("[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]")])]),s._v(" "),e("li",[e("code",[s._v("\\t")]),s._v(": 水平 tab 缩进符")]),s._v(" "),e("li",[e("code",[s._v("\\r")]),s._v(": 回车符")]),s._v(" "),e("li",[e("code",[s._v("\\n")]),s._v(": 换行符")]),s._v(" "),e("li",[e("code",[s._v("\\v")]),s._v(": 垂直 tab 缩进符")]),s._v(" "),e("li",[e("code",[s._v("\\f")]),s._v(": 换页符")]),s._v(" "),e("li",[e("code",[s._v("[\\b]")]),s._v(": 匹配 退格符（backspace）。可对比边界中的 "),e("code",[s._v("\\b")])]),s._v(" "),e("li",[e("code",[s._v("\\0")]),s._v(": 匹配 空字符 ( Null character)")]),s._v(" "),e("li",[e("code",[s._v("\\cX")]),s._v(": Matches a control character using "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Caret_notation",target:"_blank",rel:"noopener noreferrer"}},[s._v("caret notation"),e("OutboundLink")],1),s._v(', where "X" is a letter from A–Z (corresponding to codepoints '),e("code",[s._v("U+0001")]),s._v("–"),e("code",[s._v("U+001F")]),s._v("). For example, "),e("code",[s._v("/\\cM/")]),s._v(' matches "\\r" in "\\r\\n"')]),s._v(" "),e("li",[e("code",[s._v("\\xhh")]),s._v(": 匹配 Unicode 为 "),e("code",[s._v("hh")]),s._v("(2 个 16 进制数字)的字符")]),s._v(" "),e("li",[e("code",[s._v("\\uhhhh")]),s._v(": Matches a UTF-16 code-unit with the value "),e("code",[s._v("hhhh")]),s._v(" (4 个 16 进制数字)")]),s._v(" "),e("li",[e("code",[s._v("\\u{hhhh}")]),s._v(" 或 "),e("code",[s._v("\\u{hhhhh}")]),s._v(": (Only when the "),e("code",[s._v("u")]),s._v(" flag is set.) Matches the character with the Unicode value "),e("code",[s._v("U+hhhh")]),s._v(" or "),e("code",[s._v("U+hhhhh")]),s._v(" (16 进制)")]),s._v(" "),e("li",[e("code",[s._v("\\")]),s._v(": 将后面的字符特别对待 或 进行转义。\n"),e("ul",[e("li",[e("code",[s._v("/b/")]),s._v(" 匹配 'b', "),e("code",[s._v("/\\b/")]),s._v(" 匹配单词边界")]),s._v(" "),e("li",[e("code",[s._v("/a*/")]),s._v(" 匹配 0 或多个 'a', "),e("code",[s._v("/a\\*/")]),s._v(" 匹配 'a*'")]),s._v(" "),e("li",[s._v("如果你想将字符串传递给 RegExp 构造函数，不要忘记在字符串字面量中反斜杠是转义字符。所以为了在模式中添加一个反斜杠，你需要在字符串字面量中转义它。"),e("code",[s._v("/[a-z]\\s/i")]),s._v(" 和 "),e("code",[s._v('new RegExp("[a-z]\\\\s", "i")')]),s._v(" 创建了相同的正则表达式。"),e("code",[s._v("/[a-z]:\\\\/i")]),s._v("和 "),e("code",[s._v('new RegExp("[a-z]:\\\\\\\\","i")')]),s._v(" 会创建相同的表达式")])])])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转义")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("escapeRegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[.*+?^${}()|[\\]\\\\]")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\\\$&'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//$&表示整个被匹配的字符串")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"组和范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组和范围"}},[s._v("#")]),s._v(" 组和范围")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("x|y")]),s._v(": 匹配 x 或 y")]),s._v(" "),e("li",[e("code",[s._v("[xyz]")]),s._v(", "),e("code",[s._v("[a-c]")]),s._v(": 匹配 x 或 y 或 z, 匹配 a 或 b 或 c。"),e("code",[s._v("[abc]")]),s._v(" 等价于 "),e("code",[s._v("[a-c]")])]),s._v(" "),e("li",[e("code",[s._v("[^xyz]")]),s._v(", "),e("code",[s._v("[^a-c]")]),s._v(": 匹配不是 x/y/z 的其他字符, 匹配不是 a/b/c 的其他字符。"),e("code",[s._v("[^abc]")]),s._v(" 等价于 "),e("code",[s._v("[^a-c]")])]),s._v(" "),e("li",[e("code",[s._v("(x)")]),s._v(": 捕获组。一个正则表达式可能有多个捕获组，通过 match 返回的捕获组顺序和 捕获组中左括号出现的顺序一致【从左到右】。\n"),e("blockquote",[e("p",[e("code",[s._v("String.match()")]),s._v(" won't return groups if the "),e("code",[s._v("/.../g")]),s._v(" flag is set. However, you can still use "),e("code",[s._v("String.matchAll()")]),s._v(" to get all matches.")])])]),s._v(" "),e("li",[e("code",[s._v("\\n")]),s._v(": n 是正整数。"),e("code",[s._v("\\n")]),s._v(" 代表 第 n 个捕获组 的引用。\n"),e("blockquote",[e("p",[s._v("eg. "),e("code",[s._v("/apple(,)\\sorange\\1/")]),s._v(' matches "apple, orange," in "apple, orange, cherry, peach"')])])]),s._v(" "),e("li",[e("code",[s._v("(?:x)")]),s._v(": 不捕获组。")]),s._v(" "),e("li",[e("code",[s._v("(?<Name>x)")]),s._v(": 命名捕获组。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RE_DATE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RE_DATE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1999-12-31'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("groups"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  { year: '1999', month: '12', day: '31' }")]),s._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2000-02-20'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RE_DATE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("groups"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  { year: '2000', month: '02', day: '20' }")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"量词"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[s._v("#")]),s._v(" 量词")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("x*")]),s._v(": 匹配 'x' 0 或 多次")]),s._v(" "),e("li",[e("code",[s._v("x+")]),s._v(": 匹配 'x' 1 或 多次")]),s._v(" "),e("li",[e("code",[s._v("x?")]),s._v(": 匹配 'x' 0 或 1 次")]),s._v(" "),e("li",[e("code",[s._v("x{n}")]),s._v(": 匹配 n 个 'x'")]),s._v(" "),e("li",[e("code",[s._v("x{n,}")]),s._v(": 匹配 >=n 个 'x'")]),s._v(" "),e("li",[e("code",[s._v("x{n, m}")]),s._v(": 匹配 >=n 且 <=m 个 'x'")]),s._v(" "),e("li",[e("code",[s._v("x*?")]),s._v(", "),e("code",[s._v("x+?")]),s._v(", "),e("code",[s._v("x??")]),s._v(", "),e("code",[s._v("x{n}?")]),s._v(", "),e("code",[s._v("x{n,}?")]),s._v(", "),e("code",[s._v("x{n,m}?")]),s._v(": "),e("code",[s._v("*")]),s._v(" 和 "),e("code",[s._v("+")]),s._v(' 默认是"贪婪的"也就是会尽可能匹配更多。加上'),e("code",[s._v("?")]),s._v('后会让其变为"不贪婪"，也就是一匹配到就结束。')])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some <foo> <bar> new </bar> </foo> thing'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("<.*>")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("<.*?>")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// <foo> <bar> new </bar> </foo>")]),s._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// <foo>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"unicode-属性转义-unicode-property-escapes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unicode-属性转义-unicode-property-escapes"}},[s._v("#")]),s._v(" Unicode 属性转义 (Unicode Property Escapes)")]),s._v(" "),e("ul",[e("li",[s._v("语法")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Non-binary values")]),s._v("\n\\p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("UnicodePropertyValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\\p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("UnicodePropertyName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("UnicodePropertyValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Binary and non-binary values")]),s._v("\n\\p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("UnicodeBinaryPropertyName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Negation: \\P is negated \\p")]),s._v("\n\\"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("P")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("UnicodePropertyValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\\"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("P")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("UnicodeBinaryPropertyName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("blockquote",[e("p",[s._v("UnicodeBinaryPropertyName: "),e("a",{attrs:{href:"https://tc39.es/ecma262/#table-binary-unicode-properties",target:"_blank",rel:"noopener noreferrer"}},[s._v("table-binary-unicode-properties | tc39"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("UnicodePropertyName: The name of a non-binary property: "),e("code",[s._v("General_Category")]),s._v(" (gc), "),e("code",[s._v("Script")]),s._v(" (sc), or "),e("code",[s._v("Script_Extensions")]),s._v(" (scx)")]),s._v(" "),e("p",[s._v("UnicodePropertyValue: 跟 "),e("code",[s._v("UnicodePropertyName")]),s._v(" 对应。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sentence "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A ticket to 大阪 costs ¥2000 👌.'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" regexpEmojiPresentation "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Emoji_Presentation}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sentence"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regexpEmojiPresentation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["👌"]')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" regexpNonLatin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\P{Script_Extensions=Latin}+")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sentence"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regexpNonLatin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// [" ", " ", " 大阪 ", " ¥2000 👌."]')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" regexpCurrencyOrPunctuation "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Sc}|\\p{P}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sentence"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regexpCurrencyOrPunctuation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["¥", "."]')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("blockquote",[e("p",[s._v("为了使 Unicode 属性转义起作用，正则表达式必须加上 "),e("code",[s._v("u")]),s._v(" 标志(flags)，并在 "),e("code",[s._v("\\p{}")]),s._v("或"),e("code",[s._v("\\P{}")]),s._v("花括号内声明 Unicode 字符属性")])]),s._v(" "),e("ul",[e("li",[s._v("eg. General categories")])]),s._v(" "),e("p",[s._v("对 Unicode 字符进行分类")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查找字符串中的所有字母")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" story "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'It’s the Cheshire Cat: now I shall have somebody to talk to.'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最细的写法")]),s._v("\nstory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{General_Category=Letter}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// UnicodePropertyName 可以不写，等价上面的正则表达式")]),s._v("\nstory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Letter}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用别名，等价上面的正则表达式")]),s._v("\nstory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{L}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同样等价，使用子类别（别名形式）")]),s._v("\nstory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Lu}|\\p{Ll}|\\p{Lt}|\\p{Lm}|\\p{Lo}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("gu")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("blockquote",[e("p",[s._v("MORE: "),e("a",{attrs:{href:"https://unicode.org/reports/tr18/#General_Category_Property",target:"_blank",rel:"noopener noreferrer"}},[s._v("General_Category_Property | unicode"),e("OutboundLink")],1)])]),s._v(" "),e("ul",[e("li",[s._v("eg. Script and script extensions")])]),s._v(" "),e("p",[s._v("Some languages use different scripts for their writing system. The Script and Script_Extensions Unicode properties allow regular expression to match characters according to the script they are mainly used with (Script) or according to the set of scripts they belong to (Script_Extensions).")]),s._v(" "),e("p",[s._v("For example, 'a' belongs to the Latin script and 'ε' to the Greek script.")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" mixedCharacters "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aεЛ'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// Using the canonical "long" name of the script')]),s._v("\nmixedCharacters"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Script=Latin}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("u")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Using a short alias for the script")]),s._v("\nmixedCharacters"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Script=Grek}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("u")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ε")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Using the short name Sc for the Script property")]),s._v("\nmixedCharacters"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\p{Sc=Cyrillic}")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("u")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Л")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("blockquote",[e("p",[s._v("MORE: "),e("a",{attrs:{href:"https://tc39.es/ecma262/#table-unicode-script-values",target:"_blank",rel:"noopener noreferrer"}},[s._v("table-unicode-script-values | tc39"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"使用正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达式"}},[s._v("#")]),s._v(" 使用正则表达式")]),s._v(" "),e("h3",{attrs:{id:"方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[s._v("#")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("正则表达式可以被用于 "),e("code",[s._v("RegExp")]),s._v(" 的 "),e("code",[s._v("exec")]),s._v(" 和 "),e("code",[s._v("test")]),s._v(" 方法以及 "),e("code",[s._v("String")]),s._v(" 的 "),e("code",[s._v("match")]),s._v("、"),e("code",[s._v("replace")]),s._v("、"),e("code",[s._v("search")]),s._v(" 和 "),e("code",[s._v("split")]),s._v(" 方法")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("方法")]),s._v(" "),e("th",[s._v("描述")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("exec")])]),s._v(" "),e("td",[s._v("一个在字符串中执行查找匹配的 RegExp 方法，它返回一个数组（未匹配到则返回 null）。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("test")])]),s._v(" "),e("td",[s._v("一个在字符串中测试是否匹配的 RegExp 方法，它返回 true 或 false。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("match")])]),s._v(" "),e("td",[s._v("一个在字符串中执行查找匹配的 String 方法，它返回一个数组，在未匹配到时会返回 null。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("matchAll")])]),s._v(" "),e("td",[s._v("一个在字符串中执行查找所有匹配的 String 方法，它返回一个迭代器（iterator）。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("search")])]),s._v(" "),e("td",[s._v("一个在字符串中测试匹配的 String 方法，它返回匹配到的位置索引，或者在失败时返回-1。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("replace")])]),s._v(" "),e("td",[s._v("一个在字符串中执行查找匹配的 String 方法，并且使用替换字符串替换掉匹配到的子字符串。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("split")])]),s._v(" "),e("td",[s._v("一个使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的 String 方法。")])])])]),s._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec",target:"_blank",rel:"noopener noreferrer"}},[s._v("exec"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match",target:"_blank",rel:"noopener noreferrer"}},[s._v("match"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll",target:"_blank",rel:"noopener noreferrer"}},[s._v("matchAll"),e("OutboundLink")],1)])]),s._v(" "),e("blockquote",[e("p",[s._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions")]),s._v(" "),e("p",[s._v("https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp")])])])}),[],!1,null,null,null);t.default=n.exports}}]);
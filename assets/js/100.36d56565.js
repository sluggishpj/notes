(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{498:function(t,e,a){"use strict";a.r(e);var s=a(23),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"选择器优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器优先级"}},[t._v("#")]),t._v(" 选择器优先级")]),t._v(" "),a("p",[a("code",[t._v("!important")]),t._v(" > 内联 > ID 选择器 > 类选择器 > 元素选择器")]),t._v(" "),a("h2",{attrs:{id:"reset-vs-normalize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-vs-normalize"}},[t._v("#")]),t._v(" reset vs normalize")]),t._v(" "),a("ul",[a("li",[t._v("reset: 除去所有的浏览器默认样式。对于页面所有的元素，像 "),a("code",[t._v("margin")]),t._v("、"),a("code",[t._v("padding")]),t._v("、"),a("code",[t._v("font-size")]),t._v("这些样式全部置成一样。你将必须重新定义各种元素的样式。")]),t._v(" "),a("li",[t._v("normalize: 标准化没有去掉所有的默认样式，而是保留了有用的一部分，同时还纠正了一些常见错误。")])]),t._v(" "),a("h2",{attrs:{id:"清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动"}},[t._v("#")]),t._v(" 清除浮动")]),t._v(" "),a("p",[t._v("有以下 4 个方法：")]),t._v(" "),a("ul",[a("li",[t._v("父级容器也一块浮动")]),t._v(" "),a("li",[t._v("父级容器设置 "),a("code",[t._v("overflow: auto/hidden")])]),t._v(" "),a("li",[t._v("添加伪元素 "),a("code",[t._v("clear:both")])])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix::before,\n.clearfix::after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix::after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* For IE 6/7 (trigger hasLayout) */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("ul",[a("li",[t._v("父容器设置 "),a("code",[t._v("display: flow-root")])])]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"css-clear-fix",src:"https://codepen.io/rinxu/embed/gOxZKoM?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/rinxu/pen/gOxZKoM"}},[t._v("\n  css-clear-fix")]),t._v(" by Rin ("),a("a",{attrs:{href:"https://codepen.io/rinxu"}},[t._v("@rinxu")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("h2",{attrs:{id:"z-index-如何形成层叠上下文-stacking-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#z-index-如何形成层叠上下文-stacking-context"}},[t._v("#")]),t._v(" "),a("code",[t._v("z-index")]),t._v(" 如何形成层叠上下文(stacking context)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("z-index")]),t._v(" 只能影响"),a("code",[t._v("position")]),t._v("值不是"),a("code",[t._v("static")]),t._v("的元素")])]),t._v(" "),a("p",[t._v("没有定义"),a("code",[t._v("z-index")]),t._v("的值时，元素按照它们出现在 DOM 中的顺序堆叠（层级越低，出现位置越靠上）。非静态定位的元素（及其子元素）将始终覆盖静态定位（static）的元素，而不管 HTML 层次结构如何。")]),t._v(" "),a("p",[t._v("层叠上下文是包含一组图层的元素。 在一组层叠上下文中，其子元素的"),a("code",[t._v("z-index")]),t._v("值是相对于其"),a("strong",[t._v("父元素")]),t._v("而不是 document root 设置的。每个层叠上下文完全独立于它的兄弟元素。如果元素 B 位于元素 A 之上，则即使元素 A 的子元素 C 具有比元素 B 更高的"),a("code",[t._v("z-index")]),t._v("值，元素 C 也永远不会在元素 B 之上.")]),t._v(" "),a("p",[t._v("每个层叠上下文是自包含的：当元素的内容发生层叠后，整个该元素将会在父层叠上下文中按顺序进行层叠。少数 CSS 属性会触发一个新的层叠上下文，例如 "),a("code",[t._v("opacity")]),t._v(" 小于 1，"),a("code",[t._v("filter")]),t._v(" 不是 none，"),a("code",[t._v("transform")]),t._v(" 不是 none。")]),t._v(" "),a("h2",{attrs:{id:"格式化上下文-bfc-block-formatting-context-及其工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化上下文-bfc-block-formatting-context-及其工作原理"}},[t._v("#")]),t._v(" 格式化上下文（BFC, Block Formatting Context）及其工作原理")]),t._v(" "),a("p",[t._v("块格式化上下文（Block Formatting Context，BFC） 是 Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。")]),t._v(" "),a("p",[t._v("一个 HTML 盒（Box）满足以下任意一条，会创建块格式化上下文：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("float")]),t._v(" 的值不是 "),a("code",[t._v("none")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("position")]),t._v(" 的值不是 "),a("code",[t._v("static")]),t._v(" 或 "),a("code",[t._v("relative")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("display")]),t._v(" 的值是 "),a("code",[t._v("table-cell")]),t._v("、"),a("code",[t._v("table-caption")]),t._v("、"),a("code",[t._v("inline-block")]),t._v("、"),a("code",[t._v("flex")]),t._v("、或 "),a("code",[t._v("inline-flex")]),t._v("、或 "),a("code",[t._v("grid")]),t._v("、"),a("code",[t._v("inline-grid")]),t._v(" 或 "),a("strong",[a("code",[t._v("flow-root")])]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("overflow")]),t._v(" 的值不是 "),a("code",[t._v("visible")]),t._v("。")])]),t._v(" "),a("p",[t._v("应用：")]),t._v(" "),a("ul",[a("li",[t._v("浮动定位和清除浮动时只会应用于同一个 BFC 内的元素。浮动不会影响其它 BFC 中元素的布局，而清除浮动只能清除同一 BFC 中在它前面的元素的浮动。")]),t._v(" "),a("li",[t._v("外边距折叠（Margin collapsing）也只会发生在属于同一 BFC 的块级元素之间。")])]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"300",scrolling:"no",title:"Untitled",src:"https://codepen.io/rinxu/embed/WNEVOZQ?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/rinxu/pen/WNEVOZQ"}},[t._v("\n  Untitled")]),t._v(" by Rin ("),a("a",{attrs:{href:"https://codepen.io/rinxu"}},[t._v("@rinxu")]),t._v(")\n  on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("blockquote",[a("p",[t._v("看 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context#specifications",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例"),a("OutboundLink")],1),t._v(" 更好理解。个人理解：一个 BFC 会把自己的孩子包裹住，不管孩子是否浮动。")])]),t._v(" "),a("h2",{attrs:{id:"有什么不同的方式可以隐藏内容-使其仅适用于屏幕阅读器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有什么不同的方式可以隐藏内容-使其仅适用于屏幕阅读器"}},[t._v("#")]),t._v(" 有什么不同的方式可以隐藏内容（使其仅适用于屏幕阅读器）")]),t._v(" "),a("p",[t._v("这些方法与可访问性（a11y）有关。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("width: 0; height: 0")]),t._v("：使元素不占用屏幕上的任何空间，导致不显示它。")]),t._v(" "),a("li",[a("code",[t._v("position: absolute; left: -99999px")]),t._v("： 将它置于屏幕之外。")]),t._v(" "),a("li",[a("code",[t._v("text-indent: -9999px")]),t._v("：这只适用于 block 元素中的文本。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA",target:"_blank",rel:"noopener noreferrer"}},[t._v("WAI-ARIA"),a("OutboundLink")],1),t._v("：如何增加网页可访问性的 W3C 技术规范。")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("percent-loaded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("role")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("progressbar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("aria-valuenow")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("75"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("aria-valuemin")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("aria-valuemax")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"编写高效-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写高效-css"}},[t._v("#")]),t._v(" 编写高效 CSS")]),t._v(" "),a("p",[t._v("首先，浏览器"),a("strong",[t._v("从最右边")]),t._v("的选择器，即关键选择器（key selector），"),a("strong",[t._v("向左")]),t._v("依次匹配。根据关键选择器，浏览器从 DOM 中筛选出元素，然后向上遍历被选元素的父元素，判断是否匹配。选择器匹配语句链越短，浏览器的匹配速度越快。避免使用标签和通用选择器作为关键选择器，因为它们会匹配大量的元素，浏览器必须要进行大量的工作，去判断这些元素的父元素们是否匹配。")]),t._v(" "),a("p",[t._v("BEM (Block Element Modifier)原则上建议为独立的 CSS 类命名，并且在需要层级关系时，将关系也体现在命名中，这自然会使选择器高效且易于覆盖。eg. "),a("code",[t._v(".el-radio__input--small")])]),t._v(" "),a("p",[t._v("搞清楚哪些 CSS 属性会触发重新布局（reflow）、重绘（repaint）和合成（compositing）。在写样式时，避免触发重新布局的可能。")]),t._v(" "),a("h2",{attrs:{id:"描述伪元素及其用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述伪元素及其用途"}},[t._v("#")]),t._v(" 描述伪元素及其用途")]),t._v(" "),a("p",[t._v("CSS 伪元素是添加到"),a("strong",[t._v("选择器")]),t._v("的关键字，去"),a("strong",[t._v("选择元素的特定部分")]),t._v("。它们可以用于装饰（"),a("code",[t._v(":first-line")]),t._v("，"),a("code",[t._v(":first-letter")]),t._v("）或将元素添加到标记中（与 "),a("code",[t._v("content:...")]),t._v("组合），而不必修改标记（"),a("code",[t._v(":before")]),t._v("，"),a("code",[t._v(":after")]),t._v("）。")]),t._v(" "),a("h2",{attrs:{id:"block-vs-inline-block-vs-inline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block-vs-inline-block-vs-inline"}},[t._v("#")]),t._v(" block vs inline-block vs inline")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[a("code",[t._v("block")])]),t._v(" "),a("th",[a("code",[t._v("inline-block")])]),t._v(" "),a("th",[a("code",[t._v("inline")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("大小")]),t._v(" "),a("td",[t._v("填充其父容器的宽度。")]),t._v(" "),a("td",[t._v("取决于内容。")]),t._v(" "),a("td",[t._v("取决于内容。")])]),t._v(" "),a("tr",[a("td",[t._v("定位")]),t._v(" "),a("td",[t._v("从新的一行开始，并且不允许旁边有 HTML 元素（除非是"),a("code",[t._v("float")]),t._v("）")]),t._v(" "),a("td",[t._v("与其他内容一起流动，并允许旁边有其他元素。")]),t._v(" "),a("td",[t._v("与其他内容一起流动，并允许旁边有其他元素。")])]),t._v(" "),a("tr",[a("td",[t._v("能否设置"),a("code",[t._v("width")]),t._v("和"),a("code",[t._v("height")])]),t._v(" "),a("td",[t._v("能")]),t._v(" "),a("td",[t._v("能")]),t._v(" "),a("td",[t._v("不能。 设置会被忽略。")])]),t._v(" "),a("tr",[a("td",[t._v("可以使用"),a("code",[t._v("vertical-align")]),t._v("对齐")]),t._v(" "),a("td",[t._v("不可以")]),t._v(" "),a("td",[t._v("可以")]),t._v(" "),a("td",[t._v("可以")])]),t._v(" "),a("tr",[a("td",[t._v("边距（margin）和填充（padding）")]),t._v(" "),a("td",[t._v("各个方向都存在")]),t._v(" "),a("td",[t._v("各个方向都存在")]),t._v(" "),a("td",[a("strong",[t._v("只有水平方向")]),t._v("存在。垂直方向会被忽略。 尽管"),a("code",[t._v("border")]),t._v("和"),a("code",[t._v("padding")]),t._v("在"),a("code",[t._v("content")]),t._v("周围，但垂直方向上的空间取决于"),a("code",[t._v("line-height")])])]),t._v(" "),a("tr",[a("td",[t._v("浮动（float）")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("就像一个"),a("code",[t._v("block")]),t._v("元素，可以设置垂直边距和填充。")])])])]),t._v(" "),a("h2",{attrs:{id:"position各个值区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position各个值区别"}},[t._v("#")]),t._v(" "),a("code",[t._v("position")]),t._v("各个值区别")]),t._v(" "),a("h2",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" REF")]),t._v(" "),a("blockquote",[a("p",[t._v("https://github.com/yangshun/front-end-interview-handbook")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
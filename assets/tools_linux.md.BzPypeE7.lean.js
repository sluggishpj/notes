import{_ as l,c as s,a2 as a,o as e}from"./chunks/framework.Dr622ulX.js";const k=JSON.parse('{"title":"Linux","description":"","frontmatter":{"title":"Linux"},"headers":[],"relativePath":"tools/linux.md","filePath":"docs/tools/linux.md"}'),t={name:"tools/linux.md"};function d(o,i,p,n,h,c){return e(),s("div",null,i[0]||(i[0]=[a(`<h2 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h2><h3 id="调节字体大小" tabindex="-1">调节字体大小 <a class="header-anchor" href="#调节字体大小" aria-label="Permalink to &quot;调节字体大小&quot;">​</a></h3><ul><li>调大: <code>ctrl</code>+<code>shift</code>+<code>+</code></li><li>调小: <code>ctrl</code>+<code>-</code></li></ul><h3 id="文件" tabindex="-1">文件 <a class="header-anchor" href="#文件" aria-label="Permalink to &quot;文件&quot;">​</a></h3><h4 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h4><ul><li>bin: 程序相关</li><li>boot: 启动相关</li><li>cdrom: 光盘相关</li><li>dev: 设备相关</li><li>etc: 程序，服务器配置存放</li><li>lib: 库</li><li>home:</li></ul><blockquote><p>除了 home 文件夹，其他最好不要动</p></blockquote><h4 id="命令格式" tabindex="-1">命令格式 <a class="header-anchor" href="#命令格式" aria-label="Permalink to &quot;命令格式&quot;">​</a></h4><table tabindex="0"><thead><tr><th>命令</th><th>选项</th><th>参数</th></tr></thead><tbody><tr><td>command</td><td>[-options]</td><td>[parameter1, ...]</td></tr></tbody></table><h4 id="常用操作" tabindex="-1">常用操作 <a class="header-anchor" href="#常用操作" aria-label="Permalink to &quot;常用操作&quot;">​</a></h4><ul><li><p><code>ls</code>: 可结合以下参数</p><ul><li>某一路径</li><li><code>-a</code>: 显示所有文件（包括隐藏文件）</li><li><code>-l</code>: 以列表形式展示，包括权限日期等信息</li><li><code>-h</code>: 以合适的单位显示大小，不加的话大小单位为 B</li><li>可结合使用: <code>ls -a -l -h</code>【简写: <code>ls -alh</code>】，可以不按顺序</li><li><code>&gt;</code> : 重定向，新建或覆盖内容，eg、<code>ls &gt; log.txt</code></li><li><code>&gt;&gt;</code>: 重定向，新建或追加内容，eg、<code>ls&gt;&gt;log.txt</code></li></ul></li><li><p><code>pwd</code>: 显示当前路径</p></li><li><p><code>touch</code>: 创建文件，如果文件名以<code>.</code>开头，则是隐藏文件</p></li><li><p><code>rm</code>: 删除文件</p><ul><li><code>-r</code>: 可以删除包含内容的文件夹 <ul><li>eg、<code>rm B -r</code></li></ul></li><li><code>-i</code>: 提示确认是否删除</li></ul></li><li><p><code>mkdir</code>: 创建目录</p><ul><li>eg、<code>mkdir A/B/C/D -p</code>，A 目录下的 B 目录下的 C 目录下的 D 目录，不用管文件夹是否已经存在</li></ul></li><li><p><code>rmdir</code>: 删除非空文件夹</p></li><li><p><code>clear</code>: 清屏</p></li><li><p><code>cat</code>: 查看文件内容</p><ul><li>可同时查看多个文件内容，<code>cat 1.txt 2.txt</code><ul><li>合并多个文件，<code>cat 1.txt 2.txt &gt; 3.txt</code></li></ul></li></ul></li><li><p><code>history</code>: 查看敲过的历史记录</p><ul><li>！+序号，执行命令</li></ul></li><li><p><code>|</code>: 管道，左边一命令，右边一命令</p></li><li><p><code>more</code>: 将要查看的文档分为多屏，可以查看更多，使用于大文件</p><ul><li>f: 翻屏</li><li>b: 往回翻屏</li><li>按 q 退出</li><li>eg、<code>ls -alh /bin | more</code></li></ul></li><li><p><code>;</code> : 可同时执行多个命令，少用</p><ul><li>eg、<code>ls;ls -alh</code></li></ul></li><li><p>cd</p><ul><li><code>cd ../..</code>，上一层的上一层</li><li><code>cd -</code>，上一次操作所在路径</li><li><code>cd ~</code>，进入家目录 ​</li></ul></li><li><p><code>ctrl+c</code>，取消当前行的执行</p></li><li><p><code>ln -s 源文件名 软链接文件名</code>，软链接（快捷方式）</p><ul><li>eg、<code>ln -s 1.txt 1-softlink.txt</code></li></ul></li><li><p><code>ln 源文件名 硬链接文件名</code>，硬链接（备份）</p><ul><li>eg、<code>ln 1.txt 1-hardlink.txt</code><blockquote><p>原本的文件名为一个硬链接，当硬链接数为 0 时，文件才会被删除</p></blockquote></li></ul></li><li><p><code>mv 源文件名 目标文件名</code>，移动</p><ul><li>文件重命名，eg、<code>mv 1.text 1.txt</code></li><li>移动，eg、<code>mv 1.txt books/</code>，移动到 books 目录下</li><li>文件夹改名，eg、<code>mv build/ gebibuild</code></li></ul></li><li><p><code>grep &quot;查找内容&quot; 被查找文件</code></p><ul><li><code>grep -n &quot;ntfs&quot; xxx.txt</code>，加上<code>-n</code>显示行号</li><li><code>grep -v &quot;ntfs&quot; xxx.txt</code>，加上<code>-v</code>表示查找不包括 ntfs 的内容</li><li><code>grep &quot;^ntfs&quot; xxx.txt</code>，开头加上<code>^</code>表示以 nfts 开头的行</li><li><code>grep &quot;ntfs$&quot; xxx.txt</code>，结尾加上<code>^</code>表示以 nfts 结尾的行</li></ul></li><li><p>cp，复制</p><ul><li>eg、<code>cp 2.txt build</code>，复制 2.txt 到 build 目录下</li><li><code>cp A build -r</code>，将 A 文件夹复制到 build 文件夹下</li></ul></li><li><p><code>!!</code>，执行上一条命令</p></li></ul><h4 id="查看帮助文档" tabindex="-1">查看帮助文档 <a class="header-anchor" href="#查看帮助文档" aria-label="Permalink to &quot;查看帮助文档&quot;">​</a></h4><ul><li><p><code>--help</code>: eg、<code>ls --help</code></p></li><li><p><code>man</code>: eg、<code>man ls</code>，</p><ul><li>上下键滚屏</li><li>f 键，翻屏</li><li>b 键，往回翻屏</li></ul></li><li><p><code>man 2 函数名</code>: eg、man 2 open 显示 C 函数详细用法</p></li></ul><h4 id="自动补全" tabindex="-1">自动补全 <a class="header-anchor" href="#自动补全" aria-label="Permalink to &quot;自动补全&quot;">​</a></h4><p>tab 键</p><h4 id="查找文件-find" tabindex="-1">查找文件: find <a class="header-anchor" href="#查找文件-find" aria-label="Permalink to &quot;查找文件: find&quot;">​</a></h4><p>用来在特定的目录下搜索符合条件的文件，也可以用来搜索特定用户属主的文件</p><table tabindex="0"><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td><code>find ./ -name test.sh</code></td><td>查找当前目录下所有名为 test.sh 的文件</td></tr><tr><td><code>find ./ -name &#39;\\*.sh&#39;</code></td><td>查找当前目录下所有后缀为.sh 的文件</td></tr><tr><td><code>find ./ -name &quot;[A-Z]\\*&quot;</code></td><td>查找当前目录下所有以大写字母开头的文件</td></tr><tr><td><code>find /tmp -size 2M</code></td><td>查找在/tmp 目录下等于 2M 的文件</td></tr><tr><td><code>find /tmp -size +2M</code></td><td>查找在/tmp 目录下大于 2M 的文件</td></tr><tr><td><code>find /tmp -size -2M</code></td><td>查找在/tmp 目录下小于 2M 的文件</td></tr><tr><td><code>find ./ -size +4k -size -5M</code></td><td>查找当前目录下大于 4k，小于 5M 的文件</td></tr><tr><td><code>find ./ -perm 777</code></td><td>查找当前目录下权限为 777 的文件或目录</td></tr></tbody></table><h4 id="归档管理-tar" tabindex="-1">归档管理: tar <a class="header-anchor" href="#归档管理-tar" aria-label="Permalink to &quot;归档管理: tar&quot;">​</a></h4><p>此命令可以把一系列文件归档到一个大文件，也可以把档案文件解开以恢复数据</p><p>格式: <code>tar [参数] 打包后的文件名 要打包的文件</code></p><blockquote><p>tar 命令其参数前面可以使用&quot;-&quot;，也可以不使用</p></blockquote><p>常用参数:</p><table tabindex="0"><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-c</td><td>生成档案文件，创建打包文件</td></tr><tr><td>-v</td><td>列出归档解档的详细过程，显示进度</td></tr><tr><td>-f</td><td>指定档案文件名称，f 后面一定是.tar 文件，所以必须放选项后面</td></tr><tr><td>-t</td><td>列出档案中包含的文件</td></tr><tr><td>-x</td><td>解开档案文件</td></tr></tbody></table><blockquote><p>打包: <code>tar -cvf md.tar \\*.md</code></p><p>解包: <code>tar -xvf md.tar</code></p><p>压缩方式 1: <code>tar -zcvf md.tar.gz \\*.md</code></p><p>解压缩方式 1: <code>tar -zxvf md.tar.gz</code></p><p>压缩方式 2: <code>tar -jcvf md.tar.bz2 \\*.md</code></p><p>解压缩方式 2: <code>tar -jxvf md.tar.bz2</code></p><p>压缩方式 3: <code>zip md.zip \\*.md</code></p><p>解压缩方式 3: <code>unzip md.zip</code></p></blockquote><blockquote><p>解压到指定路径【tar.gz，后面加-C 路径】: <code>tar -zxvf md.tar.gz -C result/</code></p><p>解压到指定路径【zip，中间加-d 路径】: <code>unzip -d ./result md.zip</code></p></blockquote><h4 id="which" tabindex="-1">which <a class="header-anchor" href="#which" aria-label="Permalink to &quot;which&quot;">​</a></h4><p>查看所用的命令在哪个位置</p><h4 id="alias" tabindex="-1">alias <a class="header-anchor" href="#alias" aria-label="Permalink to &quot;alias&quot;">​</a></h4><ul><li>设置指令的别名。 <ul><li>语法: <code>alias[别名]=[指令名称]</code></li><li>eg: <code>alias rm=&#39;rm -i&#39;</code></li></ul></li><li>可以用 <code>unalias</code> 解除别名</li></ul><h4 id="日志文件处理" tabindex="-1">日志文件处理 <a class="header-anchor" href="#日志文件处理" aria-label="Permalink to &quot;日志文件处理&quot;">​</a></h4><ul><li>查看文件内最新的1000行</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename</span></span></code></pre></div><ul><li>查看实时日志</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename</span></span></code></pre></div><ul><li>下载文件</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename</span></span></code></pre></div><h3 id="系统管理、磁盘管理" tabindex="-1">系统管理、磁盘管理 <a class="header-anchor" href="#系统管理、磁盘管理" aria-label="Permalink to &quot;系统管理、磁盘管理&quot;">​</a></h3><h4 id="日历" tabindex="-1">日历 <a class="header-anchor" href="#日历" aria-label="Permalink to &quot;日历&quot;">​</a></h4><ul><li><p>cal: 今天日历</p><ul><li><code>cal -y 2008</code>: 查看 2008 年日历</li></ul></li></ul><h4 id="时间" tabindex="-1">时间 <a class="header-anchor" href="#时间" aria-label="Permalink to &quot;时间&quot;">​</a></h4><ul><li><p><code>date</code>: 现在时间</p></li><li><p>设置时间</p><p>格式: <code>date [MMDDhhmm][[CC]YY][.ss]+format</code></p></li></ul><h4 id="查看进程信息" tabindex="-1">查看进程信息 <a class="header-anchor" href="#查看进程信息" aria-label="Permalink to &quot;查看进程信息&quot;">​</a></h4><ul><li><p><code>ps -aux</code>: 静态显示所有运行的进程</p></li><li><p><code>top</code>: 动态显示运行的进程</p></li><li><p><code>kill -9 pid</code>: 强制杀掉进程 pid</p></li></ul><h4 id="w-查看当前系统的负载" tabindex="-1">w 查看当前系统的负载 <a class="header-anchor" href="#w-查看当前系统的负载" aria-label="Permalink to &quot;w 查看当前系统的负载&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[pj@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]$ w</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 07:23:20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> users,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> average:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.10,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.82,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.59</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">USER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             LOGIN@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   IDLE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   JCPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   PCPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHAT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pj</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       tty1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                      07:15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    6:24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  10.07s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  0.00s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xinit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/X11/xinit/x</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pj</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       pts/0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">               07:19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.00s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  0.14s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  0.05s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> w</span></span></code></pre></div><p>第一行从左面开始显示的信息依次为: 时间，系统运行时间，登录用户数，平均负载。第二行开始以及下面所有的行，告诉我们的信息是，当前登录的都有哪些用户，以及他们是从哪里登录的等</p><p><code>load average:</code>后面的三个数值。</p><p>第一个数值表示 1 分钟内系统的平均负载值；第二个数值表示 5 分钟内系统的平均负载值；第三个数值表示 15 分钟系统的平均负载值。这个值的意义是，单位时间段内 CPU 活动进程数。</p><p>inet 192.168.122.1 netmask 255.255.255.0 broadcast 192.168.122.255</p><h4 id="关机重启" tabindex="-1">关机重启 <a class="header-anchor" href="#关机重启" aria-label="Permalink to &quot;关机重启&quot;">​</a></h4><ul><li><code>reboot</code>: 重启</li><li><code>shutdown -r now</code>: 重启，shutdown 会给别的用户提示</li><li><code>shutdown -h now</code>: 立刻关机，now 相当于时间为 0 的状态</li><li><code>shutdown -h 20:25</code>: 系统在今天 20:25 会关机</li><li><code>shutdown -h +10</code>: 再过 10 分钟关机</li><li><code>init 0</code>: 关机</li><li><code>init 6</code>: 重启</li><li><code>halt</code>: 关闭系统，等同于 shutdown -h now 和 poweroff</li></ul><h4 id="检测磁盘空间" tabindex="-1">检测磁盘空间 <a class="header-anchor" href="#检测磁盘空间" aria-label="Permalink to &quot;检测磁盘空间&quot;">​</a></h4><ul><li><code>df -h</code>: 查看<strong>磁盘</strong>使用情况</li><li><code>du -h</code>: 查看当前<strong>目录</strong>占用空间</li></ul><h4 id="查看或配置网卡信息" tabindex="-1">查看或配置网卡信息 <a class="header-anchor" href="#查看或配置网卡信息" aria-label="Permalink to &quot;查看或配置网卡信息&quot;">​</a></h4><ul><li>查看网卡信息: <code>ifconfig</code></li><li>修改网卡 ip: <code>sudo ifconfig 网卡名 要设置的ip</code></li></ul><h3 id="用户权限管理" tabindex="-1">用户权限管理 <a class="header-anchor" href="#用户权限管理" aria-label="Permalink to &quot;用户权限管理&quot;">​</a></h3><h4 id="用户管理" tabindex="-1">用户管理 <a class="header-anchor" href="#用户管理" aria-label="Permalink to &quot;用户管理&quot;">​</a></h4><ul><li>添加用户: <code>useradd 用户名</code></li><li>添加用户并创建家目录: <code>useradd 用户名 -m</code></li><li>设置；修改用户密码: <code>passwd 用户名</code></li><li>查看全部用户: <code>cat /etc/passwd</code></li><li>查看当前用户: <code>whoami</code></li><li>切换用户: <code>su 用户名</code><ul><li><code>su - 用户名</code>: 切换用户的同时也切换其家目录</li></ul></li><li>退出当前用户: <code>exit</code></li><li>查看当前谁登录: <code>who</code></li><li>删除用户: <code>userdel 用户名</code></li><li>删除用户和主目录: <code>userdel -r 用户名</code></li></ul><h4 id="远程连接" tabindex="-1">远程连接 <a class="header-anchor" href="#远程连接" aria-label="Permalink to &quot;远程连接&quot;">​</a></h4><ul><li><code>ssh 用户名@ip</code></li></ul><h4 id="管理组" tabindex="-1">管理组 <a class="header-anchor" href="#管理组" aria-label="Permalink to &quot;管理组&quot;">​</a></h4><ul><li>创建组: <code>groupadd 组名</code></li><li>删除组: <code>groupdel 组名</code></li><li>查看所有组方式 <ul><li>方式 1: groupmod + 两次 tab 键</li><li>方式 2: <code>cat /etc/group</code></li></ul></li></ul><h4 id="权限管理" tabindex="-1">权限管理 <a class="header-anchor" href="#权限管理" aria-label="Permalink to &quot;权限管理&quot;">​</a></h4><ul><li>为普通用户添加 sudo 权限【ubuntu】 <ul><li><code>sudo usermod -a -G adm 用户名</code></li><li><code>sudo usermod -a -G sudo 用户名</code></li></ul></li><li>修改文件所有者: <code>chown</code><ul><li><code>chown 用户名 文件名</code></li></ul></li><li>修改文件所属组: <code>chgrp</code><ul><li><code>chgrp 组名 文件名</code></li></ul></li><li><code>-rw-rw-r--</code><ul><li>第 1 位，是<code>-</code>则表示是文件，是<code>d</code>则是文件夹</li><li>接下来 9 个每 3 位一组 <ul><li>第 1 组: 文件拥有者权限</li><li>第 2 组: 同组者的权限</li><li>第 3 组: 其他人的权限</li><li>三位分别表示，r: 可读，w: 可写，x: 可执行，-: 表示没有对应的权限</li></ul></li></ul></li><li>修改文件权限方式 1 <ul><li>人员，u: 文件所有者，g: 同组，o: 其他人</li><li><code>chmod 人员=权限 文件名</code><ul><li>chmod u=rwx 2.py，其他同理</li><li>chmod u=r,g=r,o=r。对应位没写则默认-</li></ul></li></ul></li><li>修改文件权限方式 2 <ul><li>r ---&gt; 4</li><li>w ---&gt; 2</li><li>x ---&gt; 1</li><li>chmod 777 2.py: 所有人可读可写可执行，每一位数代表该组所有文件之和</li></ul></li></ul><h3 id="安装-rpm-包" tabindex="-1">安装 rpm 包 <a class="header-anchor" href="#安装-rpm-包" aria-label="Permalink to &quot;安装 rpm 包&quot;">​</a></h3><h4 id="安装一个-rpm-包" tabindex="-1">安装一个 rpm 包 <a class="header-anchor" href="#安装一个-rpm-包" aria-label="Permalink to &quot;安装一个 rpm 包&quot;">​</a></h4><p><code>rpm -ivh filename</code></p><ul><li><code>-i</code>: 安装</li><li><code>-v</code>: 可视化</li><li><code>-h</code>: 显示安装进度</li></ul><h4 id="升级一个-rmp-包" tabindex="-1">升级一个 rmp 包 <a class="header-anchor" href="#升级一个-rmp-包" aria-label="Permalink to &quot;升级一个 rmp 包&quot;">​</a></h4><p><code>rpm -Uvh filename -U</code></p><h4 id="卸载一个-rmp-包" tabindex="-1">卸载一个 rmp 包 <a class="header-anchor" href="#卸载一个-rmp-包" aria-label="Permalink to &quot;卸载一个 rmp 包&quot;">​</a></h4><p><code>rpm -e filename</code></p><ul><li>filename 是通过 rpm 的查询功能所查询到的 <ul><li><code>rmp -qa | grep 包名</code></li></ul></li></ul><h4 id="查询一个包是否安装" tabindex="-1">查询一个包是否安装 <a class="header-anchor" href="#查询一个包是否安装" aria-label="Permalink to &quot;查询一个包是否安装&quot;">​</a></h4><p><code>rpm -q 包名</code></p><blockquote><p>这里的包名，是不带有平台信息以及后缀名的</p></blockquote><h4 id="yum-工具" tabindex="-1">yum 工具 <a class="header-anchor" href="#yum-工具" aria-label="Permalink to &quot;yum 工具&quot;">​</a></h4><p>前提是你使用的 linux 系统是支持 yum 的。yum 最大的优势在于可以联网去下载所需要的 rpm 包，然后自动安装，在这个工程中如果要安装的 rpm 包有依赖关系，yum 会帮你解决掉这些依赖关系依次安装所有 rpm 包。</p><ul><li>列出所有可用的 rpm 包 <code>yum list </code></li><li>搜索一个 rpm 包 <code>yum search [相关关键词]</code></li><li>安装一个 rpm 包 <code>yum install [-y][包名]</code><ul><li>如果不加-y 选项，则会以与用户交互的方式安装，首先是列出需要安装的 rpm 包信息，然后会问用户是否需要安装，输入 y 则安装，输入 n 则不安装。</li></ul></li><li>卸载一个 rpm 包 <code>yum remove [-y][rpm包名]</code></li><li>升级一个 rpm 包 <code>yum update [-y][rpm包]</code></li></ul><h3 id="shell" tabindex="-1">shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;shell&quot;">​</a></h3><h4 id="设置系统变量" tabindex="-1">设置系统变量 <a class="header-anchor" href="#设置系统变量" aria-label="Permalink to &quot;设置系统变量&quot;">​</a></h4><ul><li><p>系统内<strong>所有用户</strong>登录后都能使用该变量</p><p>在<code>/etc/profile</code>文件最末行加入 <code>export 键=值 </code>然后运行<code>source /etc/profile</code>就可以生效了</p><blockquote><p><strong>/etc/profile</strong> : 这个文件预设了几个重要的变量，例如 PATH, USER, LOGNAME, MAIL, INPUTRC, HOSTNAME, HISTSIZE, umas 等</p></blockquote></li><li><p>只想让<strong>当前用户</strong>使用该变量</p><p>需要在用户<strong>主目录</strong>下的<code>.bashrc</code>文件最后一行加入<code>export 键=值 </code>然后运行<code>source .bashrc</code>就可以生效了</p><blockquote><p>该文件包含专用于你的 shell 的 bash 信息,当登录时以及每次打开新的 shell 时,该该文件被读取。例如你可以将用户自定义的 alias 或者自定义变量写到这个文件中</p></blockquote></li><li><p>设置自定义变量规则</p><ul><li><p>设定变量的格式为”a=b”，其中 a 为变量名，b 为变量的内容，等号两边不能有空格；</p></li><li><p>变量名只能由英、数字以及下划线组成，而且不能以数字开头；</p></li><li><p>当变量内容带有特殊字符（如空格）时，需要加上单引号（或双引号）</p></li><li><p>如果变量内容中需要<strong>用到其他命令</strong>运行结果则可以使用反引号；</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# myname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# echo $myname</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/root</span></span></code></pre></div></li><li><p>变量内容可以<strong>累加其他变量的内容</strong>，需要加<strong>双引号</strong>；</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# myname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LOGNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LOVE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# echo $myname</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootLOVE</span></span></code></pre></div></li></ul></li></ul><h4 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h4><ul><li><p>文件名以<code>.sh</code>结尾</p></li><li><p>文件内容的第一行是<code>#! /bin/bash</code></p></li><li><p>注释: <code>#</code></p></li><li><p>执行: <code>sh filename 参数1 参数2...</code></p><ul><li><p>用 vim 编辑的文档是不带有执行权限的，所以需要加一个执行权限，那样就可以直接使用<code>./filename</code> 执行这个脚本了</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[pj@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]$ chmod +x test.sh</span></span></code></pre></div></li><li><p>可以加-x 选项来查看这个脚本执行过程</p></li></ul></li><li><p>文件内容通过<code>$1</code>引用参数 1，其他同理</p><ul><li><code>$0</code>表示文件名</li></ul></li><li><p>从命令行读取值 read</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Please enter a number:&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Please enter another number:&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> y</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;The sum of two number is $[</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]&quot;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># another way read varibale from terminal</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Please enter a number:&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Please enter other number:&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> y</span></span></code></pre></div><blockquote><p>两者效果一样</p></blockquote></li><li><p>逻辑判断 if 语句</p><ul><li><p>不带 else</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 判断语句</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div></li><li><p>带 else</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 判断语句</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div></li><li><p>带有 elif</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 判断语句一</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">elif</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 判断语句二</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div></li></ul><blockquote><p>在判断数值大小除了可以用”(( ))”的形式</p></blockquote></li><li><p>判断文件属性</p><p><code>-e</code> : 判断文件或目录是否存在 <code>-d</code> : 判断是不是目录，并是否存在 <code>-f</code> : 判断是否是普通文件，并存在 <code>-r</code> : 判断文档是否有读权限 <code>-w</code> : 判断是否有写权限 <code>-x</code> : 判断是否可执行 使用 if 判断时，具体格式为: <code>if [ -e filename ] ; then</code></p></li><li><p>case 语句</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 变量 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">value1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">value1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">esac</span></span></code></pre></div></li><li><p>循环</p><ul><li><p>for 循环</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 变量名 in 循环的条件; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div></li><li><p>while 循环</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 条件</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	command</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div></li></ul></li><li><p>函数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 函数名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    command</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h2 id="vim" tabindex="-1">vim <a class="header-anchor" href="#vim" aria-label="Permalink to &quot;vim&quot;">​</a></h2><ul><li><p>创建: vi 文件名</p></li><li><p>以下命令都是按了<code>esc</code>后</p></li><li><p>插入:</p><ul><li><code>a</code>，光标文字后插入 <ul><li><code>A</code>，行尾插入</li></ul></li><li><code>i</code>，光标文字前插入 <ul><li><code>I</code>，行首插入</li></ul></li><li><code>o</code>，新起下一行 <ul><li><code>O</code>，新起上一行</li></ul></li><li><code>s</code>，删除光标文字，再插入</li></ul></li><li><p>末行模式，按了<code>:</code>后</p><ul><li>保存: <code>w</code></li><li>退出: <code>q</code></li><li>保存并退出: <code>wq</code>、<code>x</code></li></ul></li><li><p><code>shift + zz</code>: 保存并退出</p></li><li><p>复制本行: <code>yy</code></p><ul><li>复制包括当前行的 n 行: <code>n yy</code></li></ul></li><li><p>剪切本行: <code>dd</code></p><ul><li>剪切包括当前行的 n 行: <code>n dd</code></li></ul></li><li><p>剪切光标到行末的文本: <code>D</code></p></li><li><p>剪切光标到行首的文本: <code>d0</code></p></li><li><p>剪切该单词: <code>dw</code></p></li><li><p>剪切当前的光标文字: <code>x</code>，往后走</p></li><li><p>剪切当前的光标文字: <code>X</code>，往前走</p></li><li><p>粘贴: <code>p</code></p></li><li><p>撤销: <code>u</code></p></li><li><p>反撤销: <code>ctrl + r</code></p></li><li><p>上: <code>k</code></p></li><li><p>下: <code>j</code></p></li><li><p>左: <code>h</code></p></li><li><p>后: <code>l</code></p></li><li><p>光标跳到屏幕中间: <code>M</code></p></li><li><p>光标跳到屏幕上边: <code>H</code></p></li><li><p>光标跳到屏幕下边: <code>L</code></p></li><li><p>向上翻一页: <code>ctrl + b</code></p></li><li><p>向下翻一页: <code>ctrl + f</code></p></li><li><p>向上翻半屏: <code>ctrl + u</code></p></li><li><p>向下翻半屏: <code>ctrl + d</code></p></li><li><p>快速跳到第 n 行: <code>n G</code></p><ul><li>跳到文件末尾: <code>G</code></li><li>跳到文件头: <code>gg</code></li></ul></li><li><p>下一个单词末尾: <code>e</code></p></li><li><p>前一个单词开头: <code>b</code></p></li><li><p>下一个单词开头: <code>w</code></p></li><li><p>选中模式: <code>v</code>【每次选中一个】</p><ul><li><code>V</code>【每次选中一行】</li></ul></li><li><p>往右缩进，相当于 window 下 tab: <code>&gt;&gt;</code></p></li><li><p>往左缩进，相当于 window 下 shift+tab: <code>&lt;&lt;</code></p></li><li><p>重复执行上一次命令: <code>.</code></p></li><li><p>一片代码一片代码跳:</p><ul><li>往上<code>{</code></li><li>往下: <code>}</code></li></ul></li><li><p>替换当前光标字: <code>r 替换成的字</code> ，只能替换一个</p><ul><li><code>R 替换的多个字</code>，可以替换多个，往右替换</li></ul></li><li><p>搜索: <code>/</code></p><ul><li>通过<code>n</code>，<code>N</code>往上找和往下找</li></ul></li><li><p>全局替换: <code>:%s/目标词/替换成的词/g</code></p><ul><li>替换范围为第 n-m 行: <code>:n,ms/目标词/替换成的词/g</code></li></ul></li><li><p>显示行号: <code>:set nu</code></p><ul><li>取消行号: <code>set nonu</code></li></ul></li><li><p>光标移动到行首: <code>^</code></p><ul><li>移动到行尾: <code>$</code></li></ul></li></ul>`,87)]))}const u=l(t,[["render",d]]);export{k as __pageData,u as default};

import{_ as r,c as t,a2 as a,o as l}from"./chunks/framework.Dr622ulX.js";const u=JSON.parse('{"title":"综合问题","description":"","frontmatter":{"title":"综合问题"},"headers":[],"relativePath":"interview/integrate.md","filePath":"docs/interview/integrate.md"}'),n={name:"interview/integrate.md"};function o(i,e,s,c,d,h){return l(),t("div",null,e[0]||(e[0]=[a('<h2 id="动画卡顿问题" tabindex="-1">动画卡顿问题 <a class="header-anchor" href="#动画卡顿问题" aria-label="Permalink to &quot;动画卡顿问题&quot;">​</a></h2><ul><li><p>JS:</p><ul><li>考虑节流、防抖：<code>requestAnimationFrame</code></li><li>DOM 无关耗时操作，考虑 <code>Web Worders</code></li></ul></li><li><p>CSS:</p><ul><li>减少 <a href="/notes/frontend/browser/render.html#重绘-repaint-和回流-reflow">ReFlow（回流）</a>操作</li></ul></li><li><p>Layout</p><ul><li>动画对应元素，如果是<strong>渲染层(RenderLayout)</strong>，可以考虑提升为<strong>合成层(CompositingLayout)</strong>，方法包括 <strong>3D transforms</strong>、<strong>position fixed</strong>、<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/will-change" target="_blank" rel="noreferrer"><code>will-change</code></a>等</li><li>REF: <a href="https://juejin.cn/post/6844903966573068301" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903966573068301</a></li></ul></li></ul><h2 id="资源下载顺序" tabindex="-1">资源下载顺序 <a class="header-anchor" href="#资源下载顺序" aria-label="Permalink to &quot;资源下载顺序&quot;">​</a></h2><h3 id="css-资源下载" tabindex="-1">CSS 资源下载 <a class="header-anchor" href="#css-资源下载" aria-label="Permalink to &quot;CSS 资源下载&quot;">​</a></h3><ul><li><p>立即下载，普通 CSS 都是阻塞 rendering 的</p></li><li><p>可以通过特定方式创建非阻塞 CSS</p><ul><li>通过媒体查询，非命中条件的 CSS 就是非阻塞的</li></ul></li><li><p>不管阻塞/非阻塞 CSS，浏览器都会<strong>全部下载</strong>下来</p></li></ul><p>所以要尽快把所需的 CSS 下载下来，这也是 css link 放 <code>&lt;head&gt;</code> 中的缘故</p><blockquote><p><a href="https://web.dev/critical-rendering-path-render-blocking-css/" target="_blank" rel="noreferrer">https://web.dev/critical-rendering-path-render-blocking-css/</a></p></blockquote><h3 id="js-资源下载" tabindex="-1">JS 资源下载 <a class="header-anchor" href="#js-资源下载" aria-label="Permalink to &quot;JS 资源下载&quot;">​</a></h3><ul><li>立即下载，所有 JS <strong>执行</strong>都会阻塞 DOM 解析</li><li>普通 JS <strong>下载</strong>会阻塞 DOM 解析</li><li>可以通过特定方式创建 下载时非阻塞的 JS: <a href="/notes/frontend/js/js-in-html.html#defer-async">defer/async/module</a></li></ul><h2 id="模块循环引用" tabindex="-1">模块循环引用 <a class="header-anchor" href="#模块循环引用" aria-label="Permalink to &quot;模块循环引用&quot;">​</a></h2><blockquote><p><a href="http://www.ruanyifeng.com/blog/2015/11/circular-dependency.html" target="_blank" rel="noreferrer">http://www.ruanyifeng.com/blog/2015/11/circular-dependency.html</a></p></blockquote>',11)]))}const g=r(n,[["render",o]]);export{u as __pageData,g as default};

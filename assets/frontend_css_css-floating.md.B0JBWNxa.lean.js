import{_ as a,c as i,a2 as e,o as l}from"./chunks/framework.Dr622ulX.js";const k=JSON.parse('{"title":"浮动","description":"","frontmatter":{"title":"浮动"},"headers":[],"relativePath":"frontend/css/css-floating.md","filePath":"docs/frontend/css/css-floating.md"}'),n={name:"frontend/css/css-floating.md"};function t(p,s,h,o,c,d){return l(),i("div",null,s[0]||(s[0]=[e(`<h1 id="浮动" tabindex="-1">浮动 <a class="header-anchor" href="#浮动" aria-label="Permalink to &quot;浮动&quot;">​</a></h1><h2 id="浮动布局" tabindex="-1">浮动布局 <a class="header-anchor" href="#浮动布局" aria-label="Permalink to &quot;浮动布局&quot;">​</a></h2><p>浮动元素应沿其容器的左侧或右侧放置(或者碰到另外一个浮动的元素)，允许文本和内联元素环绕它。该元素从网页的正常流动(文档流)中移除，当依旧是文档流的一部分。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float: left;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float: right;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float: none;</span></span></code></pre></div><p>由于 float 意味着使用块布局，它在某些情况下修改 display 值的计算值：</p><p>比如</p><ul><li><code>inline</code> =&gt; <code>block</code></li><li><code>inline-block</code> =&gt; <code>block</code></li><li><code>inline-table</code> =&gt; <code>table</code></li><li><code>inline-flex</code> =&gt; <code>flex</code></li><li><code>inline-grid</code> =&gt; <code>grid</code></li></ul><blockquote><p>更多可查看：<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/float" target="_blank" rel="noreferrer">float | MDN</a></p></blockquote><h2 id="清除浮动-clear" tabindex="-1">清除浮动 clear <a class="header-anchor" href="#清除浮动-clear" aria-label="Permalink to &quot;清除浮动 clear&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clear: none;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clear: left; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*元素被向下移动用于清除之前的左浮动，也就是左边不相邻浮动元素。*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clear: right;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clear: both;</span></span></code></pre></div><blockquote><p>如果一个元素里只有浮动元素，那它的高度会是 0。如果你想要它自适应即包含所有浮动元素，那你需要清除它的子元素。</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#container::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">both</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12)]))}const E=a(n,[["render",t]]);export{k as __pageData,E as default};

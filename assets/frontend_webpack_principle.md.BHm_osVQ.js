import{_ as a,c as t,a2 as r,o}from"./chunks/framework.Dr622ulX.js";const u=JSON.parse('{"title":"Webpack 原理","description":"","frontmatter":{"title":"Webpack 原理"},"headers":[],"relativePath":"frontend/webpack/principle.md","filePath":"docs/frontend/webpack/principle.md"}'),h={name:"frontend/webpack/principle.md"};function l(n,e,c,i,s,p){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="webpack-原理" tabindex="-1">Webpack 原理 <a class="header-anchor" href="#webpack-原理" aria-label="Permalink to &quot;Webpack 原理&quot;">​</a></h1><h2 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h2><p><img src="https://f000.backblazeb2.com/file/j-assets/webpack-process.jpg" alt=""></p><blockquote><p>图片来源：<a href="https://fed.taobao.org/blog/2016/09/10/webpack-flow/" target="_blank" rel="noreferrer">https://fed.taobao.org/blog/2016/09/10/webpack-flow/</a></p></blockquote><h2 id="热更新原理" tabindex="-1">热更新原理 <a class="header-anchor" href="#热更新原理" aria-label="Permalink to &quot;热更新原理&quot;">​</a></h2><p><img src="https://f000.backblazeb2.com/file/j-assets/webpack-hmr.jpg" alt="webpack-hrm"></p><blockquote><p>图片来源：<a href="https://zhuanlan.zhihu.com/p/30669007" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/30669007</a></p></blockquote><h3 id="qa" tabindex="-1">QA <a class="header-anchor" href="#qa" aria-label="Permalink to &quot;QA&quot;">​</a></h3><h4 id="对比-live-reload" tabindex="-1">对比 live reload <a class="header-anchor" href="#对比-live-reload" aria-label="Permalink to &quot;对比 live reload&quot;">​</a></h4><p>live reload 不会保存应用的状态，刷新应用后，应用之前的状态会丢失</p><h3 id="ref" tabindex="-1">REF <a class="header-anchor" href="#ref" aria-label="Permalink to &quot;REF&quot;">​</a></h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/30669007" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/30669007</a><br><a href="https://webpack.docschina.org/concepts/hot-module-replacement/" target="_blank" rel="noreferrer">https://webpack.docschina.org/concepts/hot-module-replacement/</a> &gt; <a href="http://yizxq.xyz/2021/08/03/webpack/webpack_hotModuleReplacement%E5%8E%9F%E7%90%86/" target="_blank" rel="noreferrer">http://yizxq.xyz/2021/08/03/webpack/webpack_hotModuleReplacement原理/</a></p></blockquote><h2 id="tree-shaking" tabindex="-1">tree shaking <a class="header-anchor" href="#tree-shaking" aria-label="Permalink to &quot;tree shaking&quot;">​</a></h2><p>依赖于 ES2015 模块语法的 静态结构 特性，例如 import 和 export，通过编译阶段的静态分析，找到没有引入的模块并打上标记，然后在压缩阶段利用像 terser 这样的工具删除这些没有用到的代码</p><blockquote><p><a href="https://webpack.docschina.org/guides/tree-shaking/" target="_blank" rel="noreferrer">https://webpack.docschina.org/guides/tree-shaking/</a></p></blockquote><h2 id="babel-原理" tabindex="-1">babel 原理 <a class="header-anchor" href="#babel-原理" aria-label="Permalink to &quot;babel 原理&quot;">​</a></h2><ul><li><p>作用</p><ul><li>转换语法，eg. 箭头函数转换为普通函数</li><li>Polyfill，支持新对象/方法. eg. Promise</li></ul></li><li><p>原理：词法分析 -&gt; 语法分析 -&gt; 转换 AST -&gt; 代码生成</p></li></ul><blockquote><p><a href="https://github.com/starkwang/the-super-tiny-compiler-cn" target="_blank" rel="noreferrer">https://github.com/starkwang/the-super-tiny-compiler-cn</a><br><a href="https://babeljs.io/docs/en/" target="_blank" rel="noreferrer">https://babeljs.io/docs/en/</a><br><a href="https://juejin.cn/post/7025237833543581732" target="_blank" rel="noreferrer">https://juejin.cn/post/7025237833543581732</a></p></blockquote><h2 id="写个-loader" tabindex="-1">写个 loader <a class="header-anchor" href="#写个-loader" aria-label="Permalink to &quot;写个 loader&quot;">​</a></h2><blockquote><p><a href="https://webpack.docschina.org/contribute/writing-a-loader/" target="_blank" rel="noreferrer">https://webpack.docschina.org/contribute/writing-a-loader/</a></p></blockquote><h2 id="写个-plugin" tabindex="-1">写个 plugin <a class="header-anchor" href="#写个-plugin" aria-label="Permalink to &quot;写个 plugin&quot;">​</a></h2><blockquote><p><a href="https://webpack.docschina.org/contribute/writing-a-plugin/" target="_blank" rel="noreferrer">https://webpack.docschina.org/contribute/writing-a-plugin/</a></p></blockquote><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="hash-chunkhash-contenthash-区别" tabindex="-1">hash, chunkhash, contenthash 区别 <a class="header-anchor" href="#hash-chunkhash-contenthash-区别" aria-label="Permalink to &quot;hash, chunkhash, contenthash 区别&quot;">​</a></h3><ul><li>hash(新的叫 fullhash): 根据所有文件生成的 hash，只要其中一个改变，重新生成的 值就会变</li><li>chunkhash: 根据所属的 chunk 生成的 hash，一个 chunk 可能包含多个子 chunk，只要其中一个子 chunk 改变，关联的 chunk 都会变</li><li>contenthash: 根据生成后的 独立的文件内容生成，只跟生成后的文件内容有关</li></ul><blockquote><p>REF: <a href="https://webpack.js.org/configuration/output/#template-strings" target="_blank" rel="noreferrer">https://webpack.js.org/configuration/output/#template-strings</a> REF: <a href="https://stackoverflow.com/questions/35176489/what-is-the-purpose-of-webpack-hash-and-chunkhash" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/35176489/what-is-the-purpose-of-webpack-hash-and-chunkhash</a></p></blockquote><h3 id="sourcemap-原理" tabindex="-1">sourcemap 原理 <a class="header-anchor" href="#sourcemap-原理" aria-label="Permalink to &quot;sourcemap 原理&quot;">​</a></h3><blockquote><p><a href="http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html" target="_blank" rel="noreferrer">http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html</a></p></blockquote><h2 id="ref-1" tabindex="-1">REF <a class="header-anchor" href="#ref-1" aria-label="Permalink to &quot;REF&quot;">​</a></h2><blockquote><p><a href="https://webpack.docschina.org" target="_blank" rel="noreferrer">https://webpack.docschina.org</a><br><a href="https://fed.taobao.org/blog/2016/09/10/webpack-flow" target="_blank" rel="noreferrer">https://fed.taobao.org/blog/2016/09/10/webpack-flow</a><br><a href="https://juejin.cn/post/6854818576470933512" target="_blank" rel="noreferrer">https://juejin.cn/post/6854818576470933512</a></p></blockquote>',30)]))}const k=a(h,[["render",l]]);export{u as __pageData,k as default};
